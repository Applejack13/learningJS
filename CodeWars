"use strict";

//code to convert miles per imperial gallon to kilometers per liter
// function converter (mpg) {
//     let liter = 1,
//         kilometer = 1,
//         imperialGallon = 4.54609188 * liter,
//         mile =  1.609344 * kilometer,
//         kph = mpg/(imperialGallon / mile);

//     return kph.toFixed(2);
// }

// console.log(converter(10));


// sum of positive numbers in arr
// function positiveSum(arr) {
//     let sum = 0;

//     for (let i = 0; i < arr.length; i++) {
//         if (arr[i] > 0) {
//             sum += arr[i];
//         }
//     }

//     return sum;
// }


// odd or even
// function oddOrEven(array) {
//     let sum = 0;

//     for (let i = 0; i < array.length; i++) {
//         sum += array[i];
//     }
//         if (sum % 2 == 0) {
//             return 'even';
//         } else {
//             return 'odd';
//         }

//  }

//  console.log(oddOrEven([12, 22, 3]));


//arr between a and b
// function between(a, b) {
//     let array = [];

//     for (let i = a; i <= b; i++) {
//         array.push(i);
//     }

//     return array;
// }

// console.log(between(-44, 12));


//average  
// function findAverage(array) {
//     let result = 0;

//     if (array.length > 0) {
//         for (let i = 0; i < array.length; i++) {
//             result += array[i];
//         }
//     } else {
//         return 0;
//   }

//   return result / array.length; ;
// }


//min and max
// function highAndLow(numbers) {
//     const arr = numbers.split(' ').map(Number);
//     const max = Math.max(...arr);
//     const min = Math.min(...arr);
//     return `${max} ${min}`;
//   }


// friends filter
// function friend(friends) {
//     return friends.filter(name => name.length === 4);
//   }

  
//repeat n times => s
// function repeatStr (n, s) {
//     let result = '';
    
//     for (let i = 0; i < n; i++) {
//         result += s;
//     }
    
//     return result;
//   }
// or:
// function repeatStr (n, s) {
//   return s.repeat(n);
// }

// console.log(repeatStr(3, 'No!'));


//abbreviation
// function abbrevName(name){
//     let firstNameInitial = '',
//         secondNameInitial = '';
    
//     firstNameInitial = name[0];
    
//     for (let i = 0; i < name.length; i++) {
//         if (name[i] === ' ') {
//             secondNameInitial = name[i+1];
//             break;
//         }
//     }

//     return `${firstNameInitial.toUpperCase()}.${secondNameInitial.toUpperCase()}.`;
// }

// console.log(abbrevName('Vadym Andrieieshyn')); 


//reverse=>array
// function digitize(n) {
//     return n.toString().split('').map(Number).reverse();
//   }
  
// console.log(digitize(12345));
  
  
//new multiply array
// function maps(x){
//     let newArr = [];

//     for (let i = 0; i < x.length; i++) {
//         newArr.push(x[i] * 2);
//     } 

//     return newArr;
// }

// console.log(maps([2, 4, 6, 3]));


//array with sum of positive and negative numbers
// function countPositivesSumNegatives(input) {
//     if (!input || input.length === 0) {
//         return [];
//     }
    
//     let array1 = 0;
//     let array2 = 0;

//     for (let i = 0; i < input.length; i++) {
//         if (input[i] > 0) {
//             array1++;     
//         } else {
//             array2 += input[i];
//         }
//     }

//     return [array1, array2];
// }

// console.log(countPositivesSumNegatives([]));


// Am I better that acerage?
// function betterThanAverage(classPoints, yourPoints) {
//     let result = 0;

//     for (let i = 0; i < classPoints.length; i++) {
//         result += classPoints[i];
//     }

//     result += yourPoints;

//     let averagePoints = (totalPoints + yourPoints) / (classPoints.length + 1);
  
//     return yourPoints > averagePoints;
// }
  

//sum of numbers in array
// function sum (numbers) {
//     let sum = 0;

//     if (numbers == null) {
//         return 0;
//     } else {
//     for (let i = 0; i < numbers.length; i++) {
//         sum += numbers[i];           
//     } 
// }

//     return sum;
// }


//multiplies numbers in array
// function grow(x){
//     let result = 1;

//     for (let i = 0; i < x.length; i++) {
//         result *= x[i]; 
//     }
//     return result;
// }

// console.log(grow([4, 1, 1, 1, 4]));


//array to string with spaces
// function smash (words) {
//     return words.join(' ').trim();
// };

// console.log(smash(['hello', 'world', 'this', 'is', 'great'])); //hello world this is great


//string to arr
// function stringToArray(string){
//     return string.split(" ");
//   }

// console.log(stringToArray("Jdsdjsh osdifdsf hlskdh kjshd")); //[ 'Jdsdjsh', 'osdifdsf', 'hlskdh', 'kjshd' ]


//paper scissors rock
// function rockPaperScissors(player1, player2) {
//     if (player1 === player2) {
//       return "Draw!";
//     } else if (
//       (player1 === "rock" && player2 === "scissors") ||
//       (player1 === "scissors" && player2 === "paper") ||
//       (player1 === "paper" && player2 === "rock")
//     ) {
//       return "Player 1 won!";
//     } else {
//       return "Player 2 won!";
//     }
//   }
  

//delete every secondth element
// function removeEveryOther(arr){
//     for (let i = 1; i < arr.length; i++) {
//       arr.splice(i, 1);
//     }
//     return arr;
// }

// console.log(removeEveryOther([11, 12, 13, 14, 15, 16]));


//kmh => ms
// function cockroachSpeed(s) {
//     return Math.floor(s * 27.777778);

//   }

//   console.log(cockroachSpeed(1.08));


//srt to AlternatingCase
// String.prototype.toAlternatingCase = function () {
//     let result = "";
  
//     for (let i = 0; i < this.length; i++) {
//       if (this[i] === this[i].toUpperCase()) {
//         result += this[i].toLowerCase();
//       } else {
//         result += this[i].toUpperCase();
//       }
//     }
  
//     return result;
//   }
  
//   console.log("FLIH khfgjfh KJHhkjhK".toAlternatingCase()); 
  

//find numbers which are divisible by given number
// function divisibleBy(numbers, divisor){
//     let result = [];

//     for (let i = 0; i < numbers.length; i++) {
//         if (numbers[i] % divisor === 0) {
//             result.push(numbers[i]); 
//         } else {

//         }
//     }

//     return result;
// }

// console.log(divisibleBy([1,2,3,4,5,6], 3));


//tips
// function calculateTip(amount, rating) {
//     rating = rating.toLowerCase();
    
//     switch (rating) {
//       case 'terrible':
//         return 0;
//       case 'poor':
//         return Math.ceil(amount * 0.05);
//       case 'good':
//         return Math.ceil(amount * 0.1);
//       case 'great':
//         return Math.ceil(amount * 0.15);
//       case 'excellent':
//         return Math.ceil(amount * 0.2);
//       default:
//         return 'Rating not recognised';
//     }
//   }
  

// console.log(calculateTip(5997, "greAt"));


//remove all exclamation marks from the end of words
// function remove(s){
//     return s.split(' ').map(word => word.replace(/!*$/g, '')).join(' ');
//   }
  

// console.log(remove("Hi! !Hi !Hi! !! hihihi!!! !hihih! !"));


// multiTable
// function multiTable(number) {
//     let table = '';
//     for (let i = 1; i <= 10; i++) {
//         table += `${i} * ${number} = ${i * number}\n`;
//     }
    
//     return table;
// }

// console.log(multiTable(5));


//

//make an array and do Fizz/Buzz/FizzBuzz
// function between(a, b) {
//     let array = [];

//     for (let i = a; i <= b; i++) {
//         array.push(i);
//     }

//     return array;
// }


// let arr = between(1, 100);


// function fizzBuzz (arr) {
//     let newArray = [];

//     for (let i = 0; i < arr.length; i++) {
//         if (arr[i] % 3 === 0 && arr[i] % 5 === 0) {
//             newArray.push('FizzBuzz');
//         }  
//         else if (arr[i] % 3 === 0) {
//             newArray.push('Fizz');
//         } else if (arr[i] % 5 === 0) {
//             newArray.push('Buzz');
//         } else {
//             newArray.push(arr[i]);
//     }
// }
//     return newArray;
// }

// console.log(fizzBuzz(arr));


//like chess board
// function chess(num) {
//     let result = '';
//     for (let i = 0; i < num; i++) {
//       for (let j = 0; j < num; j++) {
//         if ((i + j) % 2 === 0) {
//           result += ' ';
//         } else {
//           result += '#';
//         }
//       }
//       result += '\n';
//     }
//     return result;
//   }
  
//   console.log(chess(8));
  

// merge two sorted arrays into one
// function mergeArrays(arr1, arr2) {
//     let result = arr1.concat(arr2); // объединяем массивы
//     result = result.filter((item, index) => result.indexOf(item) === index); // удаляем дубликаты
//     result.sort((a, b) => a - b); // сортируем по возрастанию
//     return result;
//   }
  

// console.log(mergeArrays([1,2,3,4], [5,6,7,8]));


//spongMeme font
// function spongeMeme(sentence) {
//     let newSentence = '';
//     for (let i = 0; i < sentence.length; i++) {
//       if (i % 2 === 0) {
//         newSentence += sentence[i].toUpperCase();
//       } else {
//         newSentence += sentence[i].toLowerCase();
//       }
//     }
//     return newSentence;
//   }
  

// console.log(spongeMeme("don't do this!"));


//not finished
// function fuelPrice(litres, pricePerLitre) {
//     let discount = Math.min(Math.floor(litres / 2) * 0.05, 0.25);
//     let totalCost = (litres * pricePerLitre) - (litres * discount);
//     return totalCost.toFixed(2);
//   }
  

// console.log(fuelPrice(8, 2.5));


//reverse str
// function nameShuffler(str){
//     return str.split(' ').reverse().join(' ');

//   }

// console.log(nameShuffler('Andrieieshyn Vadym'));


//pillars(it was hard!)
// function pillars(numPill, dist, width) {

//     if (numPill < 2) {
//         return 0;
//     } else {
//         return (numPill - 1) * dist * 100 + (width * (numPill - 2));
//     }
// }

// console.log(pillars(2, 20, 25));


// sum of neighboring numbers in arr
// function sumOfDifferences(arr) {

//     if (arr.length <= 1) {
//         return 0;
//     } else {
//         arr.sort((a, b) => b - a);
//         let arrNew = 0;
//         for (let i = 0; i < arr.length - 1; i++) {
//             arrNew += arr[i] - arr[i + 1];
//         }
//         return arrNew;
//     }
// }

// console.log(sumOfDifferences([1, 2, 10]));


//find and return numbers in str
// function getNumberFromString(s) {
//     let result = '';
   
//     for (let i = 0; i < s.length; i++) {
    
//         if (!isNaN(s[i]) && s[i] !== ' ') {
//         result += s[i];
//     } 
// }

//     return +result;
//   }

// console.log(getNumberFromString('hello to7 fdfg77d 3'));


//draw stairs
// function drawStairs(n) {
//     let stairs = '';

//     for (let i = 0; i < n; i++) {
//         stairs += 'I\n';
//         for (let j = 0; j <= i; j++) {
//             stairs += ' ';
//         //     for (let o = 0; o <= j; o++) {
//         //         stairs += ' ';
//         // }
//     }
// }
//     return stairs;
//   }

// console.log(drawStairs(10));


//radius of circle
// function circleArea(circle){
//     let [x, y] = circle;
//     let r = arguments[1];
//     let area = Math.PI * r * r;
//     return parseFloat(area.toFixed(6));
//   }
  
//   console.log(circleArea([10, 10], 30)); // 2827.433388

  
//letter counter
// function countBs(str) {
//     if (str === '') {
//       return 0;
//     } else if (str[0] === 'B' || str[0] === 'b') {
//       return 1 + countBs(str.slice(1));
//     } else {
//       return countBs(str.slice(1));
//     }
//   }
  
//   console.log(countBs('Bsdkfhsdfiiv sdojsfb sdfsjbbsldkj bbblkjbbbb'));
  

//cup volume
// function cupVolume(d1, d2, height) {
//     let r1 = d1 / 2;
//     let r2 = d2 / 2;
//     let volume = (1 / 3) * Math.PI * height * (r1 ** 2 + r1 * r2 + r2 ** 2);
//     return +volume.toFixed(2);
//   }
  
// console.log(cupVolume(10, 8, 10));


//min-max-step
// function generateRange(min, max, step){
//     let result = [];

//     for (let i = min; i <= max;  i += step) {
//         result.push(i);
//     }

//     return result;
// }

// console.log(generateRange(2, 10, 2));


//
