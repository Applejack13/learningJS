"use strict";

//code to convert miles per imperial gallon to kilometers per liter
// function converter (mpg) {
//     let liter = 1,
//         kilometer = 1,
//         imperialGallon = 4.54609188 * liter,
//         mile =  1.609344 * kilometer,
//         kph = mpg/(imperialGallon / mile);

//     return kph.toFixed(2);
// }

// console.log(converter(10));


// sum of positive numbers in arr
// function positiveSum(arr) {
//     let sum = 0;

//     for (let i = 0; i < arr.length; i++) {
//         if (arr[i] > 0) {
//             sum += arr[i];
//         }
//     }

//     return sum;
// }


// odd or even
// function oddOrEven(array) {
//     let sum = 0;

//     for (let i = 0; i < array.length; i++) {
//         sum += array[i];
//     }
//         if (sum % 2 == 0) {
//             return 'even';
//         } else {
//             return 'odd';
//         }

//  }

//  console.log(oddOrEven([12, 22, 3]));


//arr between a and b
// function between(a, b) {
//     let array = [];

//     for (let i = a; i <= b; i++) {
//         array.push(i);
//     }

//     return array;
// }

// console.log(between(-44, 12));


//average  
// function findAverage(array) {
//     let result = 0;

//     if (array.length > 0) {
//         for (let i = 0; i < array.length; i++) {
//             result += array[i];
//         }
//     } else {
//         return 0;
//   }

//   return result / array.length; ;
// }


//min and max
// function highAndLow(numbers) {
//     const arr = numbers.split(' ').map(Number);
//     const max = Math.max(...arr);
//     const min = Math.min(...arr);
//     return `${max} ${min}`;
//   }


// friends filter
// function friend(friends) {
//     return friends.filter(name => name.length === 4);
//   }

  
//repeat n times => s
// function repeatStr (n, s) {
//     let result = '';
    
//     for (let i = 0; i < n; i++) {
//         result += s;
//     }
    
//     return result;
//   }
// or:
// function repeatStr (n, s) {
//   return s.repeat(n);
// }

// console.log(repeatStr(3, 'No!'));


//abbreviation
// function abbrevName(name){
//     let firstNameInitial = '',
//         secondNameInitial = '';
    
//     firstNameInitial = name[0];
    
//     for (let i = 0; i < name.length; i++) {
//         if (name[i] === ' ') {
//             secondNameInitial = name[i+1];
//             break;
//         }
//     }

//     return `${firstNameInitial.toUpperCase()}.${secondNameInitial.toUpperCase()}.`;
// }

// console.log(abbrevName('Vadym Andrieieshyn')); 


//reverse=>array
// function digitize(n) {
//     return n.toString().split('').map(Number).reverse();
//   }
  
// console.log(digitize(12345));
  
  
//new multiply array
// function maps(x){
//     let newArr = [];

//     for (let i = 0; i < x.length; i++) {
//         newArr.push(x[i] * 2);
//     } 

//     return newArr;
// }

// console.log(maps([2, 4, 6, 3]));


//array with sum of positive and negative numbers
// function countPositivesSumNegatives(input) {
//     if (!input || input.length === 0) {
//         return [];
//     }
    
//     let array1 = 0;
//     let array2 = 0;

//     for (let i = 0; i < input.length; i++) {
//         if (input[i] > 0) {
//             array1++;     
//         } else {
//             array2 += input[i];
//         }
//     }

//     return [array1, array2];
// }

// console.log(countPositivesSumNegatives([]));


// Am I better that acerage?
// function betterThanAverage(classPoints, yourPoints) {
//     let result = 0;

//     for (let i = 0; i < classPoints.length; i++) {
//         result += classPoints[i];
//     }

//     result += yourPoints;

//     let averagePoints = (totalPoints + yourPoints) / (classPoints.length + 1);
  
//     return yourPoints > averagePoints;
// }
  

//sum of numbers in array
// function sum (numbers) {
//     let sum = 0;

//     if (numbers == null) {
//         return 0;
//     } else {
//     for (let i = 0; i < numbers.length; i++) {
//         sum += numbers[i];           
//     } 
// }

//     return sum;
// }


//multiplies numbers in array
// function grow(x){
//     let result = 1;

//     for (let i = 0; i < x.length; i++) {
//         result *= x[i]; 
//     }
//     return result;
// }

// console.log(grow([4, 1, 1, 1, 4]));


//array to string with spaces
// function smash (words) {
//     return words.join(' ').trim();
// };

// console.log(smash(['hello', 'world', 'this', 'is', 'great'])); //hello world this is great


//string to arr
// function stringToArray(string){
//     return string.split(" ");
//   }

// console.log(stringToArray("Jdsdjsh osdifdsf hlskdh kjshd")); //[ 'Jdsdjsh', 'osdifdsf', 'hlskdh', 'kjshd' ]


//paper scissors rock
// function rockPaperScissors(player1, player2) {
//     if (player1 === player2) {
//       return "Draw!";
//     } else if (
//       (player1 === "rock" && player2 === "scissors") ||
//       (player1 === "scissors" && player2 === "paper") ||
//       (player1 === "paper" && player2 === "rock")
//     ) {
//       return "Player 1 won!";
//     } else {
//       return "Player 2 won!";
//     }
//   }
  

//myLearning

function myLearning (hours) {
    
}

