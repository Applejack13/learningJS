"use strict";

//code to convert miles per imperial gallon to kilometers per liter
// function converter (mpg) {
//     let liter = 1,
//         kilometer = 1,
//         imperialGallon = 4.54609188 * liter,
//         mile =  1.609344 * kilometer,
//         kph = mpg/(imperialGallon / mile);

//     return kph.toFixed(2);
// }

// console.log(converter(10));


// sum of positive numbers in arr
// function positiveSum(arr) {
//     let sum = 0;

//     for (let i = 0; i < arr.length; i++) {
//         if (arr[i] > 0) {
//             sum += arr[i];
//         }
//     }

//     return sum;
// }


// odd or even
// function oddOrEven(array) {
//     let sum = 0;

//     for (let i = 0; i < array.length; i++) {
//         sum += array[i];
//     }
//         if (sum % 2 == 0) {
//             return 'even';
//         } else {
//             return 'odd';
//         }

//  }

//  console.log(oddOrEven([12, 22, 3]));


//arr between a and b
// function between(a, b) {
//     let array = [];

//     for (let i = a; i <= b; i++) {
//         array.push(i);
//     }

//     return array;
// }

// console.log(between(-44, 12));


//average  
// function findAverage(array) {
//     let result = 0;

//     if (array.length > 0) {
//         for (let i = 0; i < array.length; i++) {
//             result += array[i];
//         }
//     } else {
//         return 0;
//   }

//   return result / array.length; ;
// }


//min and max
// function highAndLow(numbers) {
//     const arr = numbers.split(' ').map(Number);
//     const max = Math.max(...arr);
//     const min = Math.min(...arr);
//     return `${max} ${min}`;
//   }


// friends filter
// function friend(friends) {
//     return friends.filter(name => name.length === 4);
//   }

  
//repeat n times => s
// function repeatStr (n, s) {
//     let result = '';
    
//     for (let i = 0; i < n; i++) {
//         result += s;
//     }
    
//     return result;
//   }
// or:
// function repeatStr (n, s) {
//   return s.repeat(n);
// }

// console.log(repeatStr(3, 'No!'));


//abbreviation
// function abbrevName(name){
//     let firstNameInitial = '',
//         secondNameInitial = '';
    
//     firstNameInitial = name[0];
    
//     for (let i = 0; i < name.length; i++) {
//         if (name[i] === ' ') {
//             secondNameInitial = name[i+1];
//             break;
//         }
//     }

//     return `${firstNameInitial.toUpperCase()}.${secondNameInitial.toUpperCase()}.`;
// }

// console.log(abbrevName('Vadym Andrieieshyn')); 


//reverse=>array
// function digitize(n) {
//     return n.toString().split('').map(Number).reverse();
//   }
  
// console.log(digitize(12345));
  
  
//new multiply array
// function maps(x){
//     let newArr = [];

//     for (let i = 0; i < x.length; i++) {
//         newArr.push(x[i] * 2);
//     } 

//     return newArr;
// }

// console.log(maps([2, 4, 6, 3]));


//array with sum of positive and negative numbers
// function countPositivesSumNegatives(input) {
//     if (!input || input.length === 0) {
//         return [];
//     }
    
//     let array1 = 0;
//     let array2 = 0;

//     for (let i = 0; i < input.length; i++) {
//         if (input[i] > 0) {
//             array1++;     
//         } else {
//             array2 += input[i];
//         }
//     }

//     return [array1, array2];
// }

// console.log(countPositivesSumNegatives([]));


// Am I better that acerage?
// function betterThanAverage(classPoints, yourPoints) {
//     let result = 0;

//     for (let i = 0; i < classPoints.length; i++) {
//         result += classPoints[i];
//     }

//     result += yourPoints;

//     let averagePoints = (totalPoints + yourPoints) / (classPoints.length + 1);
  
//     return yourPoints > averagePoints;
// }
  

//sum of numbers in array
// function sum (numbers) {
//     let sum = 0;

//     if (numbers == null) {
//         return 0;
//     } else {
//     for (let i = 0; i < numbers.length; i++) {
//         sum += numbers[i];           
//     } 
// }

//     return sum;
// }


//multiplies numbers in array
// function grow(x){
//     let result = 1;

//     for (let i = 0; i < x.length; i++) {
//         result *= x[i]; 
//     }
//     return result;
// }

// console.log(grow([4, 1, 1, 1, 4]));


//array to string with spaces
// function smash (words) {
//     return words.join(' ').trim();
// };

// console.log(smash(['hello', 'world', 'this', 'is', 'great'])); //hello world this is great


//string to arr
// function stringToArray(string){
//     return string.split(" ");
//   }

// console.log(stringToArray("Jdsdjsh osdifdsf hlskdh kjshd")); //[ 'Jdsdjsh', 'osdifdsf', 'hlskdh', 'kjshd' ]


//paper scissors rock
// function rockPaperScissors(player1, player2) {
//     if (player1 === player2) {
//       return "Draw!";
//     } else if (
//       (player1 === "rock" && player2 === "scissors") ||
//       (player1 === "scissors" && player2 === "paper") ||
//       (player1 === "paper" && player2 === "rock")
//     ) {
//       return "Player 1 won!";
//     } else {
//       return "Player 2 won!";
//     }
//   }
  

//delete every secondth element
// function removeEveryOther(arr){
//     for (let i = 1; i < arr.length; i++) {
//       arr.splice(i, 1);
//     }
//     return arr;
// }

// console.log(removeEveryOther([11, 12, 13, 14, 15, 16]));


//kmh => ms
// function cockroachSpeed(s) {
//     return Math.floor(s * 27.777778);

//   }

//   console.log(cockroachSpeed(1.08));


//srt to AlternatingCase
// String.prototype.toAlternatingCase = function () {
//     let result = "";
  
//     for (let i = 0; i < this.length; i++) {
//       if (this[i] === this[i].toUpperCase()) {
//         result += this[i].toLowerCase();
//       } else {
//         result += this[i].toUpperCase();
//       }
//     }
  
//     return result;
//   }
  
//   console.log("FLIH khfgjfh KJHhkjhK".toAlternatingCase()); 
  

//find numbers which are divisible by given number
// function divisibleBy(numbers, divisor){
//     let result = [];

//     for (let i = 0; i < numbers.length; i++) {
//         if (numbers[i] % divisor === 0) {
//             result.push(numbers[i]); 
//         } else {

//         }
//     }

//     return result;
// }

// console.log(divisibleBy([1,2,3,4,5,6], 3));


//tips
// function calculateTip(amount, rating) {
//     rating = rating.toLowerCase();
    
//     switch (rating) {
//       case 'terrible':
//         return 0;
//       case 'poor':
//         return Math.ceil(amount * 0.05);
//       case 'good':
//         return Math.ceil(amount * 0.1);
//       case 'great':
//         return Math.ceil(amount * 0.15);
//       case 'excellent':
//         return Math.ceil(amount * 0.2);
//       default:
//         return 'Rating not recognised';
//     }
//   }
  

// console.log(calculateTip(5997, "greAt"));


//remove all exclamation marks from the end of words
// function remove(s){
//     return s.split(' ').map(word => word.replace(/!*$/g, '')).join(' ');
//   }
  

// console.log(remove("Hi! !Hi !Hi! !! hihihi!!! !hihih! !"));


// multiTable
// function multiTable(number) {
//     let table = '';
//     for (let i = 1; i <= 10; i++) {
//         table += `${i} * ${number} = ${i * number}\n`;
//     }
    
//     return table;
// }

// console.log(multiTable(5));


//

//make an array and do Fizz/Buzz/FizzBuzz
// function between(a, b) {
//     let array = [];

//     for (let i = a; i <= b; i++) {
//         array.push(i);
//     }

//     return array;
// }


// let arr = between(1, 100);


// function fizzBuzz (arr) {
//     let newArray = [];

//     for (let i = 0; i < arr.length; i++) {
//         if (arr[i] % 3 === 0 && arr[i] % 5 === 0) {
//             newArray.push('FizzBuzz');
//         }  
//         else if (arr[i] % 3 === 0) {
//             newArray.push('Fizz');
//         } else if (arr[i] % 5 === 0) {
//             newArray.push('Buzz');
//         } else {
//             newArray.push(arr[i]);
//     }
// }
//     return newArray;
// }

// console.log(fizzBuzz(arr));


//like chess board
// function chess(num) {
//     let result = '';
//     for (let i = 0; i < num; i++) {
//       for (let j = 0; j < num; j++) {
//         if ((i + j) % 2 === 0) {
//           result += ' ';
//         } else {
//           result += '#';
//         }
//       }
//       result += '\n';
//     }
//     return result;
//   }
  
//   console.log(chess(8));
  

// merge two sorted arrays into one
// function mergeArrays(arr1, arr2) {
//     let result = arr1.concat(arr2); // объединяем массивы
//     result = result.filter((item, index) => result.indexOf(item) === index); // удаляем дубликаты
//     result.sort((a, b) => a - b); // сортируем по возрастанию
//     return result;
//   }
  

// console.log(mergeArrays([1,2,3,4], [5,6,7,8]));


//spongMeme font
// function spongeMeme(sentence) {
//     let newSentence = '';
//     for (let i = 0; i < sentence.length; i++) {
//       if (i % 2 === 0) {
//         newSentence += sentence[i].toUpperCase();
//       } else {
//         newSentence += sentence[i].toLowerCase();
//       }
//     }
//     return newSentence;
//   }
  

// console.log(spongeMeme("don't do this!"));


//not finished
// function fuelPrice(litres, pricePerLitre) {
//     let discount = Math.min(Math.floor(litres / 2) * 0.05, 0.25);
//     let totalCost = (litres * pricePerLitre) - (litres * discount);
//     return totalCost.toFixed(2);
//   }
  

// console.log(fuelPrice(8, 2.5));


//reverse str
// function nameShuffler(str){
//     return str.split(' ').reverse().join(' ');

//   }

// console.log(nameShuffler('Andrieieshyn Vadym'));


//pillars(it was hard!)
// function pillars(numPill, dist, width) {

//     if (numPill < 2) {
//         return 0;
//     } else {
//         return (numPill - 1) * dist * 100 + (width * (numPill - 2));
//     }
// }

// console.log(pillars(2, 20, 25));


// sum of neighboring numbers in arr
// function sumOfDifferences(arr) {

//     if (arr.length <= 1) {
//         return 0;
//     } else {
//         arr.sort((a, b) => b - a);
//         let arrNew = 0;
//         for (let i = 0; i < arr.length - 1; i++) {
//             arrNew += arr[i] - arr[i + 1];
//         }
//         return arrNew;
//     }
// }

// console.log(sumOfDifferences([1, 2, 10]));


//find and return numbers in str
// function getNumberFromString(s) {
//     let result = '';
   
//     for (let i = 0; i < s.length; i++) {
    
//         if (!isNaN(s[i]) && s[i] !== ' ') {
//         result += s[i];
//     } 
// }

//     return +result;
//   }

// console.log(getNumberFromString('hello to7 fdfg77d 3'));


//draw stairs
// function drawStairs(n) {
//     let stairs = '';

//     for (let i = 0; i < n; i++) {
//         stairs += 'I\n';
//         for (let j = 0; j <= i; j++) {
//             stairs += ' ';
//         //     for (let o = 0; o <= j; o++) {
//         //         stairs += ' ';
//         // }
//     }
// }
//     return stairs;
//   }

// console.log(drawStairs(10));


//radius of circle
// function circleArea(circle){
//     let [x, y] = circle;
//     let r = arguments[1];
//     let area = Math.PI * r * r;
//     return parseFloat(area.toFixed(6));
//   }
  
//   console.log(circleArea([10, 10], 30)); // 2827.433388

  
//letter counter
// function countBs(str) {
//     if (str === '') {
//       return 0;
//     } else if (str[0] === 'B' || str[0] === 'b') {
//       return 1 + countBs(str.slice(1));
//     } else {
//       return countBs(str.slice(1));
//     }
//   }
  
//   console.log(countBs('Bsdkfhsdfiiv sdojsfb sdfsjbbsldkj bbblkjbbbb'));
  

//cup volume
// function cupVolume(d1, d2, height) {
//     let r1 = d1 / 2;
//     let r2 = d2 / 2;
//     let volume = (1 / 3) * Math.PI * height * (r1 ** 2 + r1 * r2 + r2 ** 2);
//     return +volume.toFixed(2);
//   }
  
// console.log(cupVolume(10, 8, 10));


//min-max-step
// function generateRange(min, max, step){
//     let result = [];

//     for (let i = min; i <= max;  i += step) {
//         result.push(i);
//     }

//     return result;
// }

// console.log(generateRange(2, 10, 2));


//removeExclamationMarks
// function removeExclamationMarks(s) {
//     let result = '';

//     for (let i = 0; i < s.length; i++) {
//         if(s[i] !== '!') {
//             result += s[i];
//         }
//     }

//     return result;
// }

// console.log(removeExclamationMarks("!He!llo!"));


//endsWith method
// function solution(str, ending) {
//     return str.endsWith(ending);
//   }  

// console.log(solution("someone", "one"));


// //bouncing balls?
// function bouncingBall(h,  bounce,  window) {
//     if(h > 0 && bounce < 1 && bounce > 0 && window < h) {
//         return Math.round(h * bounce / window + 2); 
//     } else {
//         return -1;
//     }

// }

// console.log(bouncingBall(3.0, 1, 1.5));

// bouncing balls?
// function bouncingBall(h, bounce, window) {
//     if (h > 0 && bounce < 1 && bounce > 0 && window < h) {
//         if (bounce === 1) {
//             return -1;
//         }
//         return Math.ceil(Math.log(window/h)/Math.log(bounce))*2 - 1; 
//     } else {
//         return -1;
//     }
// }

// console.log(bouncingBall(30.0, 0.66, 1.5));


// sumOfArrayNumbersAndStrings
// function sumMix(x){
//     let sumOfArrayNumbersAndStrings = 0;

//     for (let i = 0; i < x.length; i++) {
//         if (typeof x[i] === 'string') {
//             sumOfArrayNumbersAndStrings += parseInt(x[i]);
//         } else if (typeof x[i] === 'number') {
//             sumOfArrayNumbersAndStrings += x[i];
//         }
//     }

//     return sumOfArrayNumbersAndStrings;
// }

// console.log(sumMix([9, 3, '7', '3']));


//increment string if it finished with a number
// function incrementString(strng) {
//     const regex = /\d+$/;
//     const match = strng.match(regex);
//     if (match) {
//       const numberStr = match[0];
//       const number = parseInt(numberStr);
//       const newNumber = number + 1;
//       const newNumberStr = newNumber.toString().padStart(numberStr.length, '0');
//       return strng.slice(0, -numberStr.length) + newNumberStr;
//     } else {
//       return strng + '1';
//     }
//   }

//   console.log(incrementString("foo2ffdg0"));


//can I build a thiangle?
// function isTriangle(a,b,c) {

//     if (a > 0 && b > 0 && c > 0) {
//         if (a + b > c && a + c > b && b + c > a) {
//         return true; 
        
//         } else {
//             return false;
//         }
//     } else {
//         return false;
//     }
// }

// console.log(isTriangle(10, 5, 8));


//howMuchILoveYou
// function howMuchILoveYou(petal) {
//     const phrases = ["I love you", "a little", "a lot", "passionately", "madly", "not at all"];
//     const index = (petal - 1) % 6;
//     return phrases[index];
//   }
  
  
// console.log(howMuchILoveYou(88));


//return a new array with the strings filtered out
// function filter_list(l) {
//     let newList = [];

//     for (let i = 0; i < l.length; i++) {
//         if (typeof l[i] == 'number') {
//             newList.push(l[i]);
//         } else if (typeof l[i] == 'string') {
//             newList;
//         }
//     }

//     return newList;
// }

// console.log(filter_list([1,2,'a','b']));


// find middle of numbers and return its index
// function gimme (triplet) {
//     let newTriplet = triplet.slice().sort((a, b) => a - b);

//     let middle = newTriplet[1];

//     return triplet.indexOf(middle);
// }

// console.log(gimme([5, 10, 14]));


//sum of str like numbers
// function sumStr(a,b) {
//     if (a == "" && b == "") {
//         return 0;
//     } else {
//         return (+a + +b).toString();
//     }
// }

// console.log(sumStr("4", "7"));


//recursion factorial with RangeError
// function factorial(n) {
//     if (n < 0 || n > 12) {
//       throw new RangeError("Input must be between 0 and 12");
//     }
//     if (n === 0) {
//       return 1;
//     }
//     let result = 1;
//     for (let i = 1; i <= n; i++) {
//       result *= i;
//     }
//     return result;
//   }
  

// console.log(factorial(11));


//add word's length into array
// function addLength(str) {
//     const words = str.split(' ');
//     const result = [];
    
//     for (let i = 0; i < words.length; i++) {
//       result.push(words[i] + ' ' + words[i].length);
//     }
  
//     return result;
//   }
  
//   console.log(addLength("You have to return word's length"));
  

//find and return only number which don't repeat
// function stray(numbers) {
//     let result = 0;
    
//     for (let i = 0; i < numbers.length; i++) {
//         if (numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i])) {
//             result = numbers[i];
//             break;
//         }
//     }
    
//     return result;
// }

// console.log(stray([17, 17, 3, 17, 17, 17, 17]));


//the same code
// function stray(numbers) {
//     const nonDuplicate = numbers.find(num => numbers.indexOf(num) === numbers.lastIndexOf(num));
//     return nonDuplicate;
//   }
  
//   console.log(stray([17, 17, 3, 17, 17, 17, 17])); 
  

//difference between cube's volumes
// const findDifference = (a, b) => Math.abs(a.reduce((acc, val) => acc * val) - b.reduce((acc, val) => acc * val));

// console.log(findDifference([30,7,11], [4,23,14]));


//investment function
// function calculateYears(principal, interest, tax, desired) {
//     let waitingInYears = 0;
//     while (principal < desired) {
//         const interestEarned = principal * interest;
//         const taxDeducted = interestEarned * tax;
//         principal += interestEarned - taxDeducted;
//         waitingInYears++;
//     }
//     return waitingInYears;
// }



// console.log(calculateYears(1500,0.1,0.185,1200));


//return hello + name
// function hello(name) {
//     name = name.toLowerCase();
//     name = name.charAt(0).toUpperCase() + name.slice(1);
//     if (typeof name === 'string') {
//         return `Hello, ${name}!`;
//     } else{
//         return `Hello, World!`
//     }
// }

// console.log(hello('vaDym'));


//remove lst "!"
// function remove (string) {
//     if (string.endsWith("!")) {
//         return string.slice(0, -1);
//     } else {
//         return false;
//     }
//   }

// console.log(remove("Vadym!!"));


//coupon check
// function checkCoupon(enteredCode, correctCode, currentDate, expirationDate) {
//     const today = new Date(currentDate);
//     const expiration = new Date(expirationDate);
  
//     if (enteredCode === correctCode && today <= expiration) {
//       return true;
//     } else {
//       return false;
//     }
//   }
  

// console.log(checkCoupon('123','123','September 5, 2014','October 1, 2014'));


//бормотание
// function accum(str) {
//     return str.split('')
//       .map((c, i) => c.toUpperCase() + c.toLowerCase().repeat(i))
//       .join('-');
//   }
  

// console.log(accum("ZpglnRxqenU"));


//sorting an array 
// function solution(nums){
//     if (nums == null) {
//         return [];
//     } else {
//         return nums.sort((a, b) => a - b);
//     }
// }

// console.log(solution([20, 2, 10]));


//twiceAsOld
// function twiceAsOld(dadYearsOld, sonYearsOld) {
//     if(dadYearsOld - sonYearsOld * 2 > 0) {
//         return dadYearsOld - sonYearsOld * 2
//     } else {
//         return -(dadYearsOld - sonYearsOld * 2)
//     }
// }

// console.log(twiceAsOld(60,26));


//DNAtoRNA
// function DNAtoRNA(dna) {
//     return dna.replace(/T/g, "U");}

// console.log(DNAtoRNA("GCAT"));


//find and return two highest nubers
// function twoHighest(arr) {
//     const uniqueValues = new Set(arr);
//     const sortedValues = [...uniqueValues].sort((a, b) => b - a);
//     return sortedValues.length >= 2 ? sortedValues.slice(0, 2) : sortedValues;
//   }
  

// console.log(twoHighest([20, 48, 4, 45]));


//delete last zeros
// function noBoringZeros(n) {
//     let noZeros = String(n);
//     let lastDigit = noZeros[noZeros.length - 1];
    
//     while (lastDigit === '0') {
//         noZeros = noZeros.slice(0, -1);
//         lastDigit = noZeros[noZeros.length - 1];
//     }
    
//     return Number(noZeros);
// }

// console.log(noBoringZeros(45680));


//Testing 1-2-3 ["a", "b", "c"] --> ["1: a", "2: b", "3: c"]
// var number=function(array){
//     let newArray = [];

//     for (let i = 0; i < array.length; i++) {
//         newArray.push(i + 1 + ": " +  array[i]);
//     }

//     return newArray;
// }

// console.log(number(["a", "b", "c"]));


//get middle letter
// function getMiddle(s) {
//     let middleIndex = Math.floor(s.length / 2);
//     if (s.length % 2 == 0) {
//       return s[middleIndex - 1] + s[middleIndex];
//     } else {
//       return s[middleIndex];
//     }
//   }
  

// console.log(getMiddle("testing"));


//regular expression for finding and deleting some letters
// function disemvowel(str) {
//     return str.replace(/[aeiouAUIOE]/g, '');
//   }

// console.log(disemvowel("Hello, your website is bullshit!"));


//unusualFive
// function unusualFive() {
//     let name = "Vadym";
//     return name.length;
//   }

// console.log(unusualFive());


//is the numbers enough small to limit
// function smallEnough(a, limit){
//     return a.every(element => element <= limit);
// }

//or

// function smallEnough(a, limit){
//     return Math.max(...a) <= limit
//   }
  


// console.log(smallEnough([78, 117, 110, 99, 104, 117, 107, 115], 500));


//exam grade
// function checkExam(array1, array2) {
//     let grade = 0;

//     for (let i = 0; i < array1.length; i++) {
//         if (array2[i] === "") { 
//             grade += 0;
//         } else if (array1[i] === array2[i]) {
//             grade += 4;
//         } else {
//             grade -= 1;
//         }
//     }
    
//     return grade < 0 ? 0 : grade; 
// }

// console.log(checkExam(["a", "a", "c", "b"], ["a", "a", "b",  ""]));


//reverse string
// function reverse(string){
//  return string.split(' ').reverse().join(' ');
// }

// console.log(reverse("Hello, Vadym"));


//get only even numbers
// function getEvenNumbers(numbersArray){
//     let newArray = [];

//     for (let i = 0; i < numbersArray.length; i++) {
//         if (numbersArray[i] % 2 == 0) {
//             newArray.push(numbersArray[i]);
//         }
//     }

//     return newArray;
// }

//or?

// function getEvenNumbers(numbersArray) {
//     return numbersArray.filter(number => number % 2 === 0);
// }

// console.log(getEvenNumbers([2, 4, 6, 5, 8]));


//population growth
// function nbYear(p0, percent, aug, p) {
//     var count = 0;
//     while (p0 < p) {
//       p0 = Math.floor((1 + percent / 100) * p0 + aug);
//       count++
//     } 
//     return count;
//   }

// console.log(nbYear(1000, 2, 50, 1200));


//multipleOfIndex
// function multipleOfIndex(array) {
//     let res = [];
    
//     for (let i = 0; i < array.length; i++) {
//         if (array[i] % i == 0) {
//             res.push(array[i]);
//         }
//     }

//     return res;
//   }

//   console.log(multipleOfIndex([22, -6, 32, 82, 9, 25]));


//999 --> 4 (because 9*9*9 = 729, 7*2*9 = 126, 1*2*6 = 12, and finally 1*2 = 2)
// function persistence(num) {
//     let count = 0;
//     while(num >= 10) {
//         num = multiplyDigits(num);
//         count ++;
//     }

//     return count;
// }

// function multiplyDigits (num) {
//     return num.toString().split('').reduce((a, b) => a * b, 1);
// }

// console.log(persistence(39));


//binary array to number
// const binaryArrayToNumber = arr => {
//     return parseInt(arr.join(''), 2);
// };

// console.log(binaryArrayToNumber([1, 1, 1, 1]));


//find uniq num
// function findUniq(arr) {
//     const sortedArr = arr.sort((a, b) => a - b);
//     return sortedArr[0] === sortedArr[1] ? sortedArr[arr.length - 1] : sortedArr[0];
//   }

// console.log(findUniq([0, 0, 0.55, 0, 0])); 
  

//remove smallest one time
// function removeSmallest(arr) {
//     const minIndex = arr.indexOf(Math.min(...arr));
//     return arr.filter((_, index) => index !== minIndex);
//   }
  
// console.log(removeSmallest([1,1,2,3,4,1,5,6]));


//sorting number from max to min
// function descendingOrder(n) {
//     const digits = String(n).split('');
//     const sortedDigits = digits.sort((a, b) => b - a);
//     return Number(sortedDigits.join(''));
//   }
    
// console.log(descendingOrder(123489));


//min value without duplicates
// function minValue(values){
//     values.sort((a, b) => a - b);

//     let result = values.filter((value, index, self) => {
//         return self.indexOf(value) === index;
//       });

//     return parseInt(result.join(''));
// }

// console.log(minValue([1, 6, 7, 6, 7]));


//adding two strings and delete duplicates
// function longest(s1, s2) {
//     const combinedString = s1 + s2;
//     const uniqueCharacters = [...new Set(combinedString)];
//     return uniqueCharacters.sort().join('');
//   }
  
// console.log(longest("aretheyhere", "yestheyarehere"));


//alphabet
// function position(letter){
//     switch(letter) {
//         case 'a': return "Position of alphabet: 1";
//         case 'b': return "Position of alphabet: 2";
//         case 'c': return "Position of alphabet: 3";
//         case 'd': return "Position of alphabet: 4";
//         case 'e': return "Position of alphabet: 5";
//         case 'f': return "Position of alphabet: 6";
//         case 'g': return "Position of alphabet: 7";
//         case 'h': return "Position of alphabet: 8";
//         case 'i': return "Position of alphabet: 9";
//         case 'j': return "Position of alphabet: 10";
//         case 'k': return "Position of alphabet: 11";
//         case 'l': return "Position of alphabet: 12";
//         case 'm': return "Position of alphabet: 13";
//         case 'n': return "Position of alphabet: 14";
//         case 'o': return "Position of alphabet: 15";
//         case 'p': return "Position of alphabet: 16";
//         case 'q': return "Position of alphabet: 17";
//         case 'r': return "Position of alphabet: 18";
//         case 's': return "Position of alphabet: 19";
//         case 't': return "Position of alphabet: 20";
//         case 'u': return "Position of alphabet: 21";
//         case 'v': return "Position of alphabet: 22";
//         case 'w': return "Position of alphabet: 23";
//         case 'x': return "Position of alphabet: 24";
//         case 'y': return "Position of alphabet: 25";
//         case 'z': return "Position of alphabet: 26";
//     }
// }


//reverse words
// function reverseWords(str) {  
//     return str.split(' ').map(word => word.split('').reverse().join('')).join(' ');
// }

// console.log(reverseWords("Hello there"));


//hex to dec
// function hexToDec(hexString){
//     return parseInt(hexString, 16);
// }

// console.log(hexToDec("a"));


//say hello
// function sayHello( name, city, state ) {
//     // name = name.toString().replace(/,/g, ' '); = like join(' ');
//     return `Hello, ${name.join(' ')}! Welcome to ${city}, ${state}!`
// }

// console.log(sayHello(['John', 'Smith'], 'Phoenix', 'Arizona'));


//
// function validatePIN(pin) {
//     if ((pin > 0) && (pin.length === 4 || pin.length === 6) && (!isNaN(parseInt(pin)))) {
//       return true;
//     } else {
//       return false;
//     }
// };

// console.log(validatePIN('66a7'));


//is PIN validate?
// function validatePIN (pin) {
//     if((/^[0-9]+$/).test(pin) && pin.length == 4 || (/^[0-9]+$/).test(pin) && pin.length == 6) {
//         return true;
//     } else {
//         return false;
//     }
// }

// console.log(validatePIN('664217'));


//intefrate
// function integrate(coefficient, exponent) {
//     exponent = exponent + 1;
//     return `${coefficient / exponent}^x${exponent}`
// }

// console.log(integrate(20, 1));


//sum of even nunumbers from 0 to n
// function oddCount(n){
//     return Math.floor(n / 2);
// }

// console.log(oddCount(15023));


// remove first and last elements
// function array(string) {
//     return string.split(',').slice(1, -1).join(' ') || null;
// }

// console.log(array('A1,B2,C3'));


//add some arrays
// function flattenAndSort(array) {
//     const mergedArray = [].concat(...array);
//     return mergedArray.sort((a, b) => a - b);
// }

// console.log(flattenAndSort([[3, 2, 1], [7, 9, 8], [6, 4, 5]]));


//username validator
// function validateUsr(username) {
//     var res = /^[a-z0-9_]{4,16}$/.test(username);
//     return res;
//   }  

// console.log(validateUsr('R5_t35'));


//
// function index(array, n) {
//     if (n >= 0 && n < array.length) {
//       return Math.pow(array[n], n);
//     }
//     return -1; 
//   }
  

//
// function defineSuit(card) {
//     if (card.includes("♣")) {
//       return 'clubs';
//     } else if (card.includes("♦")) {
//       return 'diamonds';
//     } else if (card.includes("♥")) {
//       return 'hearts';
//     } else if (card.includes("♠")) {
//       return 'spades';
//     }
//   }

// console.log(defineSuit("Q♠"));


//password validator
// const REGEXP = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z0-9]{6,}$/;


//remove exclemation marks in the end of string
// function remove(string) {  
//     return string.replace(/!+$/, '');
// }

// console.log(remove("!Hi!!"));


// sum of multiplies
// function sumMul(n, m) {
//     if (n <= 0 || m <= 0) {
//       return "n and m should be positive numbers";
//     }
  
//     let res = 0;
//     for (let i = 0; i <= m; i += n) {
//       res += i;
//     }
  
//     return res;
//   }
  
// console.log(sumMul(21, 6465654));


//
// function binToDec(bin){
//     return parseInt(bin, 2);
// }  

// console.log(binToDec("1001001"));


//day of week
// function whatday(num) {
//     const daysOfWeek = {
//         1: "Sunday",
//         2: "Monday",
//         3: "Tuesday",
//         4: "Wednesday",
//         5: "Thursday",
//         6: "Friday",
//         7: "Saturday"
//     };

//     return daysOfWeek[num] || "Wrong, please enter a number between 1 and 7";
// }


//
